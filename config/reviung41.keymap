/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2

/ {
    macros {
        enie: enie {
            label = "ZM_enie";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LA(N) N>
                ;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// --------------------------------------------------------------------------------------
// |  TAB |  Ñ  |  ,  |  .  |  P  |  Y  |   |  F  |  G  |  C  |  R  |  L  |    BKSP     |
// | CTRL |  A  |  O  |  E  |  U  |  I  |   |  D  |  H  |  T  |  N  |  S  |      ´      |
// | SHFT |  Z  |  Q  |  J  |  K  |  X  |   |  B  |  M  |  W  |  V  | - _ | SHFT(ENTER) |
//                         | ALT | LWR | SPC | RSE  | CMD |
                        bindings = <
   &kp TAB    &enie  &kp COMMA  &kp DOT  &kp P  &kp Y  &kp F  &kp G  &kp C  &kp R  &kp L      &kp BSPC
   &kp LCTRL  &kp A  &kp O      &kp E    &kp U  &kp I  &kp D  &kp H  &kp T  &kp N  &kp S      &kp LA(E)
   &kp LSHFT  &kp Z  &kp Q      &kp J    &kp K  &kp X  &kp B  &kp M  &kp W  &kp V  &kp MINUS  &mt RSHFT ENTER
                              &kp LALT  &mo 1  &kp SPACE  &mo 2  &kp RCMD
                        >;
                };

                lower_layer {
// -------------------------------------------------------------------------------
// | ESC | 1 ! | 2 @ | 3 # | 4 $ | 5 % |   | 6 ^  | 7 &  | 8 * | 9 ( | 0 ) | DEL |
// |     |     | [ { | ] } |  ¿  | + * |   | CAPS | HOME | UP  | END |     | ' " |
// |     |     |     |  ~  |  ^  |  \  |   | PRSC | LFT  | DWN | RGT | = + |     |
//                        |     |     |     |      |      |
                        bindings = <
   &kp ESC  &kp N1  &kp N2    &kp N3    &kp N4  &kp N5     &kp N6          &kp N7    &kp N8    &kp N9     &kp N0     &kp DEL
   &trans   &trans  &kp LBKT  &kp RBKT  &trans  &kp trans  &kp CLCK        &trans    &kp UP    &trans     &trans     &kp SQT
   &trans   &trans  &trans    &trans    &trans  &trans     &kp LS(RG(N5))  &kp LEFT  &kp DOWN  &kp RIGHT  &kp EQUAL  &trans
                                       &trans  &trans  &trans  &trans  &trans
                        >;
                };

                raise_layer {
// ------------------------------------------------------------------------------------
// |    | F1  | F3  | F11 | F12 |     |   | MUTE | VOL- | VOL+ | PREV |  NEXT  | PLAY |
// |    |     |  ¿  | / ? | \ | |     |   | vSUG |      |      |      |        |  `   |
// |    |     |     |     |     |     |   |      |      |      | BT0  | BT CLR |      |
//                       |     |     |     |      |      |
                        bindings = <
   &trans  &kp F1  &kp F3            &kp F11   &kp F12   &trans  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PREV    &kp C_NEXT  &kp C_PP
   &trans  &trans  &kp LA(LS(FSLH))  &kp FSLH  &kp BSLH  &trans  &trans      &trans        &trans        &trans        &trans      &kp LA(GRAVE)
   &trans  &trans  &trans            &trans    &trans    &trans  &trans      &trans        &trans        &bt BT_SEL 0  &bt BT_CLR  &trans
                                             &trans  &trans  &trans  &trans  &trans
                        >;
                };
        };
};
